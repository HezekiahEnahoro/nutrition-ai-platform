# Generated by Django 4.2.7 on 2025-09-24 15:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('calories_per_100g', models.FloatField()),
                ('protein_per_100g', models.FloatField(default=0)),
                ('carbs_per_100g', models.FloatField(default=0)),
                ('fat_per_100g', models.FloatField(default=0)),
                ('fiber_per_100g', models.FloatField(default=0)),
                ('sugar_per_100g', models.FloatField(default=0)),
                ('sodium_per_100g', models.FloatField(default=0, help_text='mg')),
                ('calcium_per_100g', models.FloatField(default=0, help_text='mg')),
                ('iron_per_100g', models.FloatField(default=0, help_text='mg')),
                ('vitamin_c_per_100g', models.FloatField(default=0, help_text='mg')),
                ('usda_id', models.CharField(blank=True, max_length=50, null=True)),
                ('edamam_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20)),
                ('description', models.TextField(help_text="User's description of the meal")),
                ('total_calories', models.FloatField(blank=True, null=True)),
                ('total_protein', models.FloatField(blank=True, null=True)),
                ('total_carbs', models.FloatField(blank=True, null=True)),
                ('total_fat', models.FloatField(blank=True, null=True)),
                ('total_fiber', models.FloatField(blank=True, null=True)),
                ('ai_confidence', models.FloatField(blank=True, help_text='AI confidence score (0-1)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('ai_analysis_raw', models.JSONField(blank=True, null=True)),
                ('logged_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-logged_at'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('nutrient_gap', 'Nutrient Gap'), ('food_suggestion', 'Food Suggestion'), ('meal_timing', 'Meal Timing'), ('portion_size', 'Portion Size'), ('goal_progress', 'Goal Progress')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('confidence_score', models.FloatField(default=0.8)),
                ('is_read', models.BooleanField(default=False)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meals.meal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MealFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_grams', models.FloatField()),
                ('calories', models.FloatField()),
                ('protein', models.FloatField()),
                ('carbs', models.FloatField()),
                ('fat', models.FloatField()),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meals.food')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foods', to='meals.meal')),
            ],
        ),
    ]
